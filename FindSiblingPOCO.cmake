if (EXISTS "${PROJECT_SOURCE_DIR}/../poco/")
  message (STATUS "Sibling POCO found.")
  set (POCO_FOUND TRUE)

  set (POCO_ActiveRecord_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/ActiveRecord/include/")
  set (POCO_ActiveRecord_LIBRARY ActiveRecord)
  if (EXISTS ${POCO_ActiveRecord_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_ActiveRecord_INCLUDE_DIR})
    if (NOT TARGET ${POCO_ActiveRecord_LIBRARY})
      message (WARNING "Target ${POCO_ActiveRecord_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_ActiveRecord_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_ActiveRecord_LIBRARY})
      if (NOT TARGET Poco::ActiveRecord)
        add_library (Poco::ActiveRecord ALIAS ${POCO_ActiveRecord_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_CppParser_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/CppParser/include/")
  set (POCO_CppParser_LIBRARY CppParser)
  if (EXISTS ${POCO_CppParser_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_CppParser_INCLUDE_DIR})
    if (NOT TARGET ${POCO_CppParser_LIBRARY})
      message (WARNING "Target ${POCO_CppParser_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_CppParser_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_CppParser_LIBRARY})
      if (NOT TARGET Poco::CppParser)
        add_library (Poco::CppParser ALIAS ${POCO_CppParser_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Crypto_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Crypto/include/")
  set (POCO_Crypto_LIBRARY Crypto)
  if (EXISTS ${POCO_Crypto_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Crypto_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Crypto_LIBRARY})
      message (WARNING "Target ${POCO_Crypto_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Crypto_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Crypto_LIBRARY})
      if (NOT TARGET Poco::Crypto)
        add_library (Poco::Crypto ALIAS ${POCO_Crypto_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Data_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Data/include/")
  set (POCO_Data_LIBRARY Data)
  if (EXISTS ${POCO_Data_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Data_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Data_LIBRARY})
      message (WARNING "Target ${POCO_Data_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Data_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Data_LIBRARY})
      if (NOT TARGET Poco::Data)
        add_library (Poco::Data ALIAS ${POCO_Data_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_DataSQLite_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Data/SQLite/include/")
  set (POCO_DataSQLite_LIBRARY DataSQLite)
  if (EXISTS ${POCO_DataSQLite_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_DataSQLite_INCLUDE_DIR})
    if (NOT TARGET ${POCO_DataSQLite_LIBRARY})
      message (WARNING "Target ${POCO_DataSQLite_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_DataSQLite_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_DataSQLite_LIBRARY})
      if (NOT TARGET Poco::DataSQLite)
        add_library (Poco::DataSQLite ALIAS ${POCO_DataSQLite_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Encodings_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Encodings/include/")
  set (POCO_Encodings_LIBRARY Encodings)
  if (EXISTS ${POCO_Encodings_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Encodings_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Encodings_LIBRARY})
      message (WARNING "Target ${POCO_Encodings_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Encodings_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Encodings_LIBRARY})
      if (NOT TARGET Poco::Encodings)
        add_library (Poco::Encodings ALIAS ${POCO_Encodings_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Foundation_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Foundation/include/")
  set (POCO_Foundation_LIBRARY Foundation)
  if (EXISTS ${POCO_Foundation_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Foundation_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Foundation_LIBRARY})
      message (WARNING "Target ${POCO_Foundation_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Foundation_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Foundation_LIBRARY})
      if (NOT TARGET Poco::Foundation)
        add_library (Poco::Foundation ALIAS ${POCO_Foundation_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_JSON_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/JSON/include/")
  set (POCO_JSON_LIBRARY JSON)
  if (EXISTS ${POCO_JSON_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_JSON_INCLUDE_DIR})
    if (NOT TARGET ${POCO_JSON_LIBRARY})
      message (WARNING "Target ${POCO_JSON_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_JSON_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_JSON_LIBRARY})
      if (NOT TARGET Poco::JSON)
        add_library (Poco::JSON ALIAS ${POCO_JSON_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_JWT_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/JWT/include/")
  set (POCO_JWT_LIBRARY JWT)
  if (EXISTS ${POCO_JWT_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_JWT_INCLUDE_DIR})
    if (NOT TARGET ${POCO_JWT_LIBRARY})
      message (WARNING "Target ${POCO_JWT_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_JWT_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_JWT_LIBRARY})
      if (NOT TARGET Poco::JWT)
        add_library (Poco::JWT ALIAS ${POCO_JWT_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_MongoDB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/MongoDB/include/")
  set (POCO_MongoDB_LIBRARY MongoDB)
  if (EXISTS ${POCO_MongoDB_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_MongoDB_INCLUDE_DIR})
    if (NOT TARGET ${POCO_MongoDB_LIBRARY})
      message (WARNING "Target ${POCO_MongoDB_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_MongoDB_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_MongoDB_LIBRARY})
      if (NOT TARGET Poco::MongoDB)
        add_library (Poco::MongoDB ALIAS ${POCO_MongoDB_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Net_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Net/include/")
  set (POCO_Net_LIBRARY Net)
  if (EXISTS ${POCO_Net_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Net_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Net_LIBRARY})
      message (WARNING "Target ${POCO_Net_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Net_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Net_LIBRARY})
      if (NOT TARGET Poco::Net)
        add_library (Poco::Net ALIAS ${POCO_Net_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_NetSSL_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/NetSSL_OpenSSL/include/")
  set (POCO_NetSSL_LIBRARY NetSSL)
  if (EXISTS ${POCO_NetSSL_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_NetSSL_INCLUDE_DIR})
    if (NOT TARGET ${POCO_NetSSL_LIBRARY})
      message (WARNING "Target ${POCO_NetSSL_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_NetSSL_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_NetSSL_LIBRARY})
      if (NOT TARGET Poco::NetSSL)
        add_library (Poco::NetSSL ALIAS ${POCO_NetSSL_LIBRARY})
      endif ()
    endif ()
  endif ()

  if (WIN32)
    set (POCO_NetSSLWin_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/NetSSL_Win/include/")
    set (POCO_NetSSLWin_LIBRARY NetSSLWin)
    if (EXISTS ${POCO_NetSSLWin_INCLUDE_DIR})
      list (APPEND POCO_INCLUDE_DIRS ${POCO_NetSSLWin_INCLUDE_DIR})
      if (NOT TARGET ${POCO_NetSSLWin_LIBRARY})
        message (WARNING "Target ${POCO_NetSSLWin_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_NetSSLWin_LIBRARY} is enabled.")
      else ()
        list (APPEND POCO_LIBRARIES ${POCO_NetSSLWin_LIBRARY})
        if (NOT TARGET Poco::NetSSLWin)
          add_library (Poco::NetSSLWin ALIAS ${POCO_NetSSLWin_LIBRARY})
        endif ()
      endif ()
    endif ()
  endif ()

  set (POCO_PDF_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/PDF/include/")
  set (POCO_PDF_LIBRARY PDF)
  if (EXISTS ${POCO_PDF_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_PDF_INCLUDE_DIR})
    if (NOT TARGET ${POCO_PDF_LIBRARY})
      message (WARNING "Target ${POCO_PDF_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_PDF_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_PDF_LIBRARY})
      if (NOT TARGET Poco::PDF)
        add_library (Poco::PDF ALIAS ${POCO_PDF_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Redis_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Redis/include/")
  set (POCO_Redis_LIBRARY Redis)
  if (EXISTS ${POCO_Redis_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Redis_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Redis_LIBRARY})
      message (WARNING "Target ${POCO_Redis_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Redis_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Redis_LIBRARY})
      if (NOT TARGET Poco::Redis)
        add_library (Poco::Redis ALIAS ${POCO_Redis_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_SevenZip_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/SevenZip/include/")
  set (POCO_SevenZip_LIBRARY SevenZip)
  if (EXISTS ${POCO_SevenZip_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_SevenZip_INCLUDE_DIR})
    if (NOT TARGET ${POCO_SevenZip_LIBRARY})
      message (WARNING "Target ${POCO_SevenZip_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_SevenZip_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_SevenZip_LIBRARY})
      if (NOT TARGET Poco::SevenZip)
        add_library (Poco::SevenZip ALIAS ${POCO_SevenZip_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Util_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Util/include/")
  set (POCO_Util_LIBRARY Util)
  if (EXISTS ${POCO_Util_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Util_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Util_LIBRARY})
      message (WARNING "Target ${POCO_Util_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Util_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Util_LIBRARY})
      if (NOT TARGET Poco::Util)
        add_library (Poco::Util ALIAS ${POCO_Util_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_XML_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/XML/include/")
  set (POCO_XML_LIBRARY XML)
  if (EXISTS ${POCO_XML_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_XML_INCLUDE_DIR})
    if (NOT TARGET ${POCO_XML_LIBRARY})
      message (WARNING "Target ${POCO_XML_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_XML_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_XML_LIBRARY})
      if (NOT TARGET Poco::XML)
        add_library (Poco::XML ALIAS ${POCO_XML_LIBRARY})
      endif ()
    endif ()
  endif ()

  set (POCO_Zip_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/../poco/Zip/include/")
  set (POCO_Zip_LIBRARY Zip)
  if (EXISTS ${POCO_Zip_INCLUDE_DIR})
    list (APPEND POCO_INCLUDE_DIRS ${POCO_Zip_INCLUDE_DIR})
    if (NOT TARGET ${POCO_Zip_LIBRARY})
      message (WARNING "Target ${POCO_Zip_LIBRARY} is NOT FOUND. You should include POCO as sibling library before ${PROJECT_NAME} and make sure ${POCO_Zip_LIBRARY} is enabled.")
    else ()
      list (APPEND POCO_LIBRARIES ${POCO_Zip_LIBRARY})
      if (NOT TARGET Poco::Zip)
        add_library (Poco::Zip ALIAS ${POCO_Zip_LIBRARY})
      endif ()
    endif ()
  endif ()
else ()
  message (STATUS "Sibling POCO NOT found.")
endif ()
