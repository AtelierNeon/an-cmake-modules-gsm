if (EXISTS "${PROJECT_SOURCE_DIR}/../zlib/")
  message (STATUS "Sibling Zlib found.")
  set (ZLIB_FOUND TRUE)
  set (ZLIB_INCLUDE_DIRS
    "${PROJECT_SOURCE_DIR}/../zlib/"
    "${PROJECT_BINARY_DIR}/../zlib/")
  set (ZLIB_LIBRARY zlib)
  if (ZLIB_USE_STATIC_LIBS)
    message (STATUS "Using static sibling Zlib.")
    set (ZLIB_LIBRARY zlibstatic)
  else ()
    message (STATUS "Using shared sibling Zlib.")
  endif ()
  set (ZLIB_LIBRARIES ${ZLIB_LIBRARY})
elseif (EXISTS "${PROJECT_SOURCE_DIR}/../../zlib/")
  message (STATUS "Sibling Zlib found.")
  set (ZLIB_FOUND TRUE)
  set (ZLIB_INCLUDE_DIRS
    "${PROJECT_SOURCE_DIR}/../../zlib/"
    "${PROJECT_BINARY_DIR}/../../zlib/")
  set (ZLIB_LIBRARY zlib)
  if (ZLIB_USE_STATIC_LIBS)
    message (STATUS "Using static sibling Zlib.")
    set (ZLIB_LIBRARY zlibstatic)
  else ()
    message (STATUS "Using shared sibling Zlib.")
  endif ()
  set (ZLIB_LIBRARIES ${ZLIB_LIBRARY})
else ()
  message (STATUS "Sibling Zlib NOT found.")
endif ()

if (ZLIB_FOUND)
  if (NOT TARGET ZLIB::ZLIB)
    if (NOT TARGET ${ZLIB_LIBRARY})
      message (WARNING "Target ${ZLIB_LIBRARY} is NOT FOUND. You should include Zlib as sibling library before ${PROJECT_NAME}.")
    else ()
      set_target_properties(${ZLIB_LIBRARY} PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES "${ZLIB_INCLUDE_DIRS}")
      add_library (ZLIB::ZLIB ALIAS ${ZLIB_LIBRARY})
    endif ()
  endif ()
endif ()

if (ZLIB_INCLUDE_DIRS AND NOT ZLIB_INCLUDE_DIR)
  set (ZLIB_INCLUDE_DIR ${ZLIB_INCLUDE_DIRS})
endif ()
